angular.module("dndLists",[]).directive("dndDraggable",function(e,t){return function(n,r,i){r.attr("draggable","true");r.on("dragstart",function(e){e.dataTransfer.setData("json",angular.toJson(n.$eval(i.dndDraggable)));e.dataTransfer.effectAllowed=i.dndEffectAllowed;r.addClass("dndDragging");t(function(){r.addClass("dndDraggingSource")},0);e.stopPropagation()});r.on("dragend",function(t){n.$apply(function(){switch(t.dataTransfer.dropEffect){case"move":e(i.dndMoved)(n);break;case"copy":e(i.dndCopied)(n);break}});r.removeClass("dndDragging");r.removeClass("dndDraggingSource");t.stopPropagation()});r.on("click",function(t){n.$apply(function(){e(i.dndSelected)(n)});t.stopPropagation()})}}).directive("dndList",function(e){return function(t,n,r){var i=angular.element("<li class='dndPlaceholder'></li>");var s=i[0];var o=n[0];n.on("dragover",function(e){if(Array.prototype.indexOf.call(e.dataTransfer.types,"json")===-1){return true}if(e.target.parentNode===o){var t=e.offsetY<e.target.offsetHeight/2;o.insertBefore(s,t?e.target:e.target.nextSibling)}else if(s.parentNode!=o){n.append(i)}n.addClass("dndDragover");e.preventDefault();e.stopPropagation()});n.on("dragleave",function(t){n.removeClass("dndDragover");e(function(){if(!n.hasClass("dndDragover")){i.remove()}},100)});n.on("drop",function(e){var u=JSON.parse(e.dataTransfer.getData("json"));var a=t.$eval(r.dndList);var f=Array.prototype.indexOf.call(o.children,s);t.$apply(function(){a.splice(f,0,u)});i.remove();n.removeClass("dndDragover");e.preventDefault();e.stopPropagation()})}})